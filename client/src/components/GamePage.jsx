import PropTypes from "prop-types";
import React from "react";
import Footer from './Footer';
import Header from './Header';
import { getJSONData } from "../actions/data";
import shortid from 'simple-random-id';
// import io from 'socket.io-client';  
// const socket = io()

// import socket from "../sockets/index";

// const alarm = new Audio('../public/data/time-up.mp3');
// the above line didn't seem to work so...
// I converted the file time-up.mp3 to URI using https://dopiaza.org/tools/datauri/index.php
// I had originally gotten the file time-up.mp3 from http://www.orangefreesounds.com/wake-up-sounds/
const getAlarm = () => new Audio(
  "data:audio/mp3;base64,SUQzAwAAAABQMFRZRVIAAAAGAAAAMjAxOABUREFUAAAABgAAADI0MDgAVElNRQAAAAYAAAAxNzM4AFBSSVYAAB/2AABYTVAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDQgNzkuMTYyMDQ1LCAyMDE4LzAxLzIzLTA2OjA1OjUyICAgICAgICAiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczp4bXBETT0iaHR0cDovL25zLmFkb2JlLmNvbS94bXAvMS4wL0R5bmFtaWNNZWRpYS8iCiAgICB4bWxuczpjcmVhdG9yQXRvbT0iaHR0cDovL25zLmFkb2JlLmNvbS9jcmVhdG9yQXRvbS8xLjAvIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmE0YjU5NjEwLTVhNmMtNGU0Mi1iYWEzLTQ2NDhhOTUzZTQyZiIKICAgeG1wTU06RG9jdW1lbnRJRD0iODZiZDEwMDUtNzI4My0zNmFlLTA4ZDMtMzhmZDAwMDAwMDRkIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6NjBiOTczY2YtYTU4NC00OGE1LTg5ODYtY2JmOTNmN2JjODM4IgogICB4bXA6TWV0YWRhdGFEYXRlPSIyMDE4LTA4LTI0VDE3OjM4OjQzKzAxOjAwIgogICB4bXA6TW9kaWZ5RGF0ZT0iMjAxOC0wOC0yNFQxNzozODo0MyswMTowMCIKICAgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQcmVtaWVyZSBQcm8gQ0MgMjAxOC4xIChNYWNpbnRvc2gpIgogICB4bXA6Q3JlYXRlRGF0ZT0iMjAxOC0wOC0yNFQxNzozODoxMyswMTowMCIKICAgeG1wRE06YXVkaW9TYW1wbGVSYXRlPSItMSIKICAgeG1wRE06YXVkaW9TYW1wbGVUeXBlPSIxNkludCIKICAgeG1wRE06YXVkaW9DaGFubmVsVHlwZT0iU3RlcmVvIgogICB4bXBETTpzdGFydFRpbWVTY2FsZT0iMjUiCiAgIHhtcERNOnN0YXJ0VGltZVNhbXBsZVNpemU9IjEiCiAgIGRjOmZvcm1hdD0iTVAzIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9ImIwNTdmMzI0LWQ2NmEtMzg2OS1jZDIxLWVlZTkwMDAwMDA3YSIKICAgICAgc3RFdnQ6d2hlbj0iMjAxOC0wOC0yNFQxNzozODo0MyswMTowMCIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUHJlbWllcmUgUHJvIENDIDIwMTguMSAoTWFjaW50b3NoKSIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIvPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmNlNDYyOWQ1LWFjOTctNDZlZC04YzYyLWI0YzQwNDRjZjc2ZSIKICAgICAgc3RFdnQ6d2hlbj0iMjAxOC0wOC0yNFQxNzozODo0MyswMTowMCIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUHJlbWllcmUgUHJvIENDIDIwMTguMSAoTWFjaW50b3NoKSIvPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiY2M0YjA0Mi0yOTU0LTRiNTUtODEwMS03NjRkZTQyM2U4ZDciCiAgICAgIHN0RXZ0OndoZW49IjIwMTgtMDgtMjRUMTc6Mzg6NDMrMDE6MDAiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFByZW1pZXJlIFBybyBDQyAyMDE4LjEgKE1hY2ludG9zaCkiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2" +
  "ZWQiCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YTRiNTk2MTAtNWE2Yy00ZTQyLWJhYTMtNDY0OGE5NTNlNDJmIgogICAgICBzdEV2dDp3aGVuPSIyMDE4LTA4LTI0VDE3OjM4OjQzKzAxOjAwIgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQcmVtaWVyZSBQcm8gQ0MgMjAxOC4xIChNYWNpbnRvc2gpIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvbWV0YWRhdGEiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogICA8eG1wTU06SW5ncmVkaWVudHM+CiAgICA8cmRmOkJhZz4KICAgICA8cmRmOmxpCiAgICAgIHN0UmVmOmluc3RhbmNlSUQ9ImQzYzBlMmM2LWQ4MGMtNDkzOS1hOWMzLTE1OWMwMDAwMDA4OCIKICAgICAgc3RSZWY6ZG9jdW1lbnRJRD0iZTNiOWU0MzAtMzBhZi0yY2UwLWI1MTYtNmFlNjAwMDAwMDViIgogICAgICBzdFJlZjpmcm9tUGFydD0idGltZTowZDUwODAzMjAwMDAwMGYyNTQwMTYwMDAwMDAiCiAgICAgIHN0UmVmOnRvUGFydD0idGltZTowZDUwODAzMjAwMDAwMGYyNTQwMTYwMDAwMDAiCiAgICAgIHN0UmVmOmZpbGVQYXRoPSJ0aW1lLXVwXzAxXzNzZWNzICgyKS5tcDMiCiAgICAgIHN0UmVmOm1hc2tNYXJrZXJzPSJOb25lIi8+CiAgICA8L3JkZjpCYWc+CiAgIDwveG1wTU06SW5ncmVkaWVudHM+CiAgIDx4bXBNTTpQYW50cnk+CiAgICA8cmRmOkJhZz4KICAgICA8cmRmOmxpPgogICAgICA8cmRmOkRlc2NyaXB0aW9uCiAgICAgICB4bXA6TWV0YWRhdGFEYXRlPSIyMDE4LTA4LTI0VDE3OjM4OjQzKzAxOjAwIgogICAgICAgeG1wOk1vZGlmeURhdGU9IjIwMTgtMDgtMjRUMTc6Mzc6NDYrMDE6MDAiCiAgICAgICB4bXBNTTpJbnN0YW5jZUlEPSJkM2MwZTJjNi1kODBjLTQ5MzktYTljMy0xNTljMDAwMDAwODgiCiAgICAgICB4bXBNTTpEb2N1bWVudElEPSJlM2I5ZTQzMC0zMGFmLTJjZTAtYjUxNi02YWU2MDAwMDAwNWIiCiAgICAgICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6YWRjZGFkNTItYjk5Yi00ZjkzLTliM2EtMWZmZDBmMjZlM2IwIgogICAgICAgZGM6Zm9ybWF0PSJhdWRpby9tcGVnIgogICAgICAgeG1wRE06cGFydE9mQ29tcGlsYXRpb249ImZhbHNlIj4KICAgICAgPHhtcE1NOkhpc3Rvcnk+CiAgICAgICA8cmRmOlNlcT4KICAgICAgICA8cmRmOmxpCiAgICAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YWRjZGFkNTItYjk5Yi00ZjkzLTliM2EtMWZmZDBmMjZlM2IwIgogICAgICAgICBzdEV2dDp3aGVuPSIyMDE4LTA3LTI2VDE1OjI4OjQzKzAxOjAwIgogICAgICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBBdWRpdGlvbiBDQyAyMDE4LjEgKE1hY2ludG9zaCkiCiAgICAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii9tZXRhZGF0YSIvPgogICAgICAgIDxyZGY6bGkKICAgICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo1NzQzZTkyMi1jZTQzLTQyM2QtOTk5Mi0yZGZmNmRjNzQ4MTMiCiAgICAgICAgIHN0RXZ0OndoZW49IjIwMTgtMDctMjZUMTU6Mjg6NDMrMDE6MDAiCiAgICAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIEF1ZGl0aW9uIENDIDIwMTguMSAoTWFjaW50b3NoKSIKICAgICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIvPgogICAgICAgIDxyZGY6bGkKICAgICAgICAgc3RFdnQ6YWN0aW9uPSJtb2RpZmllZCIKICAgICAgICAgc3RFdnQ6cGFyYW1ldGVycz0idW5rbm93biBtb2RpZmljYXRpb25zIi8+CiAgICAgICAgPHJkZjpsaQogICAgICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICAgICBzdEV2dDppbnN0YW5jZUlEPSJkM2MwZTJjNi1kODBjLTQ5MzktYTljMy0xNTljMDAwMDAwODgiCiAgICAgICAgIHN0RXZ0OndoZW49IjIwMTgtMDgtMjRUMTc6Mzc6NDYrMDE6MDAiCiAgICAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFByZW1pZXJlIFBybyBDQyAyMDE4LjEgKE1hY2ludG9zaCkiCiAgICAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4KICAgICAgICA8cmRmOmxpCiAgICAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZGY1YzIxYTEtMmI4MC00MjZjLWJlN2UtYzAxMDM1NDYzNTYzIgogICAgICAgICBzdEV2dDp3aGVuPSIyMDE4LTA4LTI0VDE3OjM4OjQzKzAxOjAwIgogICAgICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQcmVtaWVyZSBQcm8gQ0MgMjAxOC4xIChNYWNpbnRvc2gpIgogICAgICAgICBzdEV2dDpjaGFuZ2VkPSIvbWV0YWRhdGEiLz4KICAgICAgIDwvcmRmOlNlcT4KICAgICAgPC94bXBNTTpIaXN0b3J5PgogICAgICA8eG1wTU06RGVyaXZlZEZyb20KICAgICAgIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6YWRjZGFkNTItYjk5Yi00ZjkzLTliM2EtMWZmZDBmMjZlM2IwIgogICAgICAgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDphZGNkYWQ1Mi1iOTliLTRmOTMtOWIzYS0xZmZkMGYyNmUzYjAiCiAgICAgICBzdFJlZjpvcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6YWRjZGFkNTItYjk5Yi00ZjkzLTliM2EtMWZmZDBmMjZlM2IwIi8+CiAgICAgIDx4bXBETTpUcmFja3M+CiAgICAgICA8cmRmOkJhZz4KICAgICAgICA8cmRmOmxpCiAgICAgICAgIHhtcERNOnRyYWNrTmFtZT0iQ3VlUG9pbnQgTWFya2VycyIKICAgICAgICAgeG1wRE06dHJhY2tUeXBlPSJDdWUiCiAgICAgICAgIHhtcERNOmZyYW1lUmF0ZT0iZjQ0MTAwIi8+CiAgICAgICAgPHJkZjpsaQogICAgICAgICB4bXBETTp0cmFja05hbWU9IkNEIFRyYWNrIE1hcmtlcnMiCiAgICAgICAgIHhtcERNOnRyYWNrVHlwZT0iVHJhY2siCiAgICAgICAgIHhtcERNOmZyYW1lUmF0ZT0iZjQ0MTAwIi8+CiAgICAgICAgPHJkZjpsaQogICAgICAgICB4bXBETTp0cmFja05hbWU9IlN1YmNsaXAgTWFya2VycyIKICAgICAgICAgeG1wRE06dHJhY2tUeXBlPSJJbk91dCIKICAgICAgICAgeG1wRE06ZnJhbWVSYXRlPSJmNDQxMDAiLz4KICAgICAgIDwvcmRmOkJhZz4KICAgICAgPC94bXBETTpUcmFja3M+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICAgIDwvcmRmOmxpPgogICAgPC9yZGY6QmFnPgogICA8L3htcE1NOlBhbnRyeT4KICAgPHhtcE1NOkRlcml2ZWRGcm9tCiAgICBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOmNlNDYyOWQ1LWFjOTctNDZlZC04YzYyLWI0YzQwNDRjZjc2ZSIKICAgIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6Y2U0NjI5ZDUtYWM5Ny00NmVkLThjNjItYjRjNDA0NGNmNzZlIgogICAgc3RSZWY6b3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmNlNDYyOWQ1LWFjOTctNDZlZC04YzYyLWI0YzQwNDRjZjc2ZSIvPgogICA8Y3JlYXRvckF0b206d2luZG93c0F0b20KICAgIGNyZWF0b3JBdG9tOmV4dGVuc2lvbj0iLnBycHJvaiIKICAgIGNyZWF0b3JBdG9tOmludm9jYXRpb25GbGFncz0iL0wiLz4KICAgPGNyZWF0b3JBdG9tOm1hY0F0b20KICAgIGNyZWF0b3JBdG9tOmFwcGxpY2F0aW9uQ29kZT0iMTM0NzQ0OTQ1NSIKICAgIGNyZWF0b3JBdG9tOmludm9jYXRpb25BcHBsZUV2ZW50PSIxMTI5NDY4MDE4IgogICAgY3JlYXRvckF0b206cG9zaXhQcm9qZWN0UGF0aD0iL1" +
  "" +
  "" +
  "" +
  "" +
  "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KrVBiOzwdFESAFDsTkwpBjQy+AQgAlK6NpcSkfVy21xMZNs2aBv/+5Rgv4AFNk1Vae/TYgAACXAAAAEVvUtPp78NgAAAJcAAAAQ+exFYGwjMe7Bda6ExckNgQj+OYnSrbjmP06WFOnKZKSOLe3pyq2LlWuF4eoJyk5Wbe961kZlKoXE/nCHmj6OX0nKhZrNzNLF7aJKl6Ik6Xj7F3rXM+zNdQ1gJ1wV0tdQYvtbL2m2E0TpjarqNr/9iVwsUi/5/JZqSIVb1gSDSJF4CfROoUS0FdVBQqhgJwESpMGUBVdmDa5pEjnNRaZk1H91TkhJEjhKpnP39UblVUzOZTz+cSfX/r///9qr+Z51MS9TNbOeZr1X/7dqS////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////+5RgwwAE2VLK4Yx7YAAACXAAAAELfTsZBIzNgAAAJcAAAAT/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////+5RA9YAKQABLgAAACAAACXAAAAEAAAEuAAAAIAAAJcAAAAT/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////+5RA/4AK4ABLgAAACAAACXAAAAEAAAEuAAAAIAAAJcAAAAT/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////+5RA/4AK4ABLgAAACAAACXAAAAEAAAEuAAAAIAAAJcAAAAT/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////+5RA/4AK4ABLgAAACAAACXAAAAEAAAEuAAAAIAAAJcAAAAT/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////+5RA/4AK4ABLgAAACAAACXAAAAEAAAEuAAAAIAAAJcAAAAT/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////+5RA/4AK4ABLgAAACAAACXAAAAEAAAEuAAAAIAAAJcAAAAT//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+5RA/4AK4ABLgAAACAAACXAAAAEAAAEuAAAAIAAAJcAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUQUcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMDE4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==");

const QuestionContainer = (
  {
    shouldAnimateInnerBox,
    shouldAnimateQuestionText,
    currentQuestionText,
    currentQuestionNumber,
    buttonText,
    isAdmin,
    handleRestart,
  }) => (
    <div className="question-container">
      <div className="question-box">
        <div className={`question-inner ${shouldAnimateInnerBox}`}>
          <div className={`question-text ${shouldAnimateQuestionText}`}>{currentQuestionText || '?'}</div>
        </div>
        <div className="question-index">{ currentQuestionNumber> 0 ? currentQuestionNumber : '?' }</div>
      </div>
    </div>
);

const RegularUserButton = ({ currentCount }) => (
  <div className="button-container">
    <button id='startButton' className="button start">{currentCount || 'PLEASE WAIT' }</button>
  </div>
)

const AdminUserButtons = ({
  firstButtonText,
  secondButtonText,
  currentCount,
  handleStart,
  handleRestart,
  gameCompleted,
}) => (
  <div className="button-container">
    <button id='startButton' onClick={currentCount ? null : handleStart} 
    className="button start">{firstButtonText}</button>
    <button id='restartButton' className="button" onClick={handleRestart}>{secondButtonText}</button>
  </div>
)

class GamePage extends React.Component {
  constructor(props) {
    super(props);

    // Gets :id params in the current route
    const { id } = this.props.match.params;

    // State.
    this.state = {
      gameStarted: false,
      id,
      shuffleArray: [],
      roomId: '',
      data: null,
      isAdmin: false,
      restart: false,
      question: '',
      currentQuestion: { number: '', text: '' },
      buttonText: "",
      buttonIsNext: false,
      timerCounting: false,
      gameCompleted: false,
      nextQuestion: false,
      soundAlarm: false,
      questionNumber: 0,
      // Animation states
      beginAnimate: false,
      nextAnimate: false,
      restartAnimate: false,
    }
    this.timer = null;
  }

  componentDidMount() {
    socket.emit('conected', JSON.parse(localStorage.getItem('state')));

    getJSONData(this.state.id, (json) => {
      this.setState({ data: json }, () => {
        if(!this.props.location.search){
          this.handleLoad();
        }
      });
    });
    // Gets the json data from data file
    const { search } = this.props.location;
    if(search.toString().indexOf("roomId") !== -1){
    const {search } = this.props.location;
    const roomId = search.slice(search.toString().indexOf("=") + 1)
    socket.emit('start', { roomId: roomId.toString(), questionNum: null });
    this.setState({
      gameStarted: true,
      soundAlarm: false,
      beginAnimate: true,
      nextAnimate: true,
      questionNumber: 1,
      buttonText: 30,
    }, () => {
      // Pick a random question
      this.randomQuestion();
      // Set animation state to false after 2 sec.
      setTimeout(() => {
        this.setState({ beginAnimate: false, nextAnimate: false });
      }, 1000);
    });

    }

    socket.on('counter', ({ counts }) => {
      if(counts > 0){
        this.setState({
          timerCounting: true,
          currentCount: counts,
          gamePaused: false,
          gameCompleted: false
        })
      } else {
        if(this.state.isAdmin) {
          this.soundAlarm();
          this.changeGameState();
        }else{
          this.setState({currentCount: 0, timerCounting: false})
        }
      }
    });

    socket.on("getNewQuestion", (data) => {
      const { currQuestion, questions } = data;

      this.setState({
        currentQuestion: currQuestion[0],
        data: questions
      });
    })

    socket.on("setQuestion", (data) => {
      const { gameQuestion, questions } = data;
      this.setState({
        currentQuestion: gameQuestion,
        data: questions
      });
    })

    socket.on('pageRestarted', (data) => {
      this.setState({
        data: data.newQuestions,
        currentQuestion: { text: 'Session Restarted!!!'}
      });
    });

    socket.on('gameOver', () => {
      this.setState({
        currentQuestion: { text: 'GAME OVER!!!'}
      });
    });

    socket.on('newAdmin', ({timerValue}) => {
      this.setState({
        isAdmin: true,
      }, () => {
        if(timerValue){
          this.startTimer(true, timerValue)
        }
      });
    });

    window.onbeforeunload = () => {
      localStorage.setItem('state', JSON.stringify({
        socketId: socket.id,
        roomId: this.state.roomId,
        isAdmin: this.state.isAdmin,
        currentTimerValue: this.state.currentCount
      }));
    }
  }

  componentDidUpdate(prev, prevState) {
    if(prevState.gameCompleted !== this.state.gameCompleted){
      socket.emit('gameOver', { roomId: this.state.roomId });
    }
  }

  //
  handleLoad(){
    let roomId = '';
    const { search } = this.props.location;
    const questionNum = Math.floor((Math.random() * this.state.data.tasks.length));
    if(!this.props.location.search){
      roomId = shortid();
      this.props.history.push(`${this.props.location.pathname}/?roomId=${roomId}`);
    }else{
      roomId = search.slice(search.toString().indexOf("=") + 1);
    }
    socket.emit('start', { roomId, questionNum, 
      questions: this.state.data, newGame: true })
  }

  // Gets called when "BEGIN" button is clicked.
  handleBegin = () => {
    // Setting necessary states for when begin button is clicked
    this.setState({
      gameStarted: true,
      isAdmin: true,
      soundAlarm: false,
      timerCounting: false,
      gamePaused: false,
      beginAnimate: true,
      nextAnimate: true,
    }, () => {
      // Pick a random question
      this.randomQuestion();
      // Set animation state to false after 2 sec.
      setTimeout(() => {
        this.setState({ beginAnimate: false, nextAnimate: false });
      }, 1000);
    });
  }

  // Pick a question from shuffleArray and pops it from the array
  randomQuestion = () => {
    // Question gets popped from the array.
    const { search } = this.props.location;
    const roomId = search.slice(search.toString().indexOf("=") + 1);

    this.setState({ roomId });
    if(this.state.nextQuestion){
      const questionNum = Math.floor((Math.random() * this.state.data.tasks.length));
      socket.emit('getNewQuestion', { roomId, qIndex: questionNum, nextQuestion: true })
    }else{
      socket.emit("setQuestion", { roomId });
    }
    // Setting the new current question.
  }

  // Gets called when "RESTART" button is clicked.
  handleRestart = () => {
    clearInterval(this.timer);
    this.timer = null;
    getJSONData(this.state.id, (json) => {
      this.setState({
        gameStarted: false,
        gameCompleted: false,
        restart: true,
        buttonIsNext: false,
        timerCounting: false,
        currentCount: false,
        gamePaused: false,
        restartAnimate: true,
        nextQuestion: false,
        data: json,
        questionNumber: 0,
      }, () => {
        socket.emit('pageRestarted', { roomId: this.state.roomId, newQuestions: json })
        // Set animation state to false after 2 sec.
        setTimeout(() => {
          this.setState({ restartAnimate: false });
        }, 1000);
      });
    });
  }

  // Gets called when "START" button is clicked.
  handleStart = (e) => {
    // After `timerCounting` has been set.
    // Check if the button has `NEXT` on it.
    if (this.state.gameCompleted) {
      // Redirect to landing page.
      this.props.history.push('/');
    } else if (this.state.buttonIsNext) {
      this.setState({
        nextQuestion: true,
        buttonIsNext: false,
        gamePaused: false,
        timerCounting: false,
      }, 
      () => {
        this.randomQuestion()
      });
    } else {
      this.startTimer()
    }
  }

  createTimer = (initialCount) => {
    let counter = initialCount;
    let timerFunc = () => {
      // Decrement counter.
      socket.emit('counter', { counter, roomId: this.state.roomId });
      if(counter === 0) { 
        clearInterval(this.timer)
        this.timer = null;
      }else{
        counter--;
      }
    }
    let timer = setInterval(timerFunc, 1000);
    return timer;
  }

  startTimer = (isRestart = false, timerValue) => {
    let counter = isRestart ? timerValue : 60
    this.timer = this.createTimer(counter);
  }

  // Sounds the alarm.
  soundAlarm = () => {
    const alarm = getAlarm();
    alarm.play();
  }

  handleBody = (e) => {
    this.setState({ soundAlarm: false });
  }

  changeGameState = () => {
    const hasTasks = this.state.data.tasks.length > 0;
    this.setState({
      currentCount: 0,
      timerCounting: false,
      buttonIsNext: true,
      gamePaused: hasTasks,
      gameCompleted: !hasTasks
    })
  }

  getAdminButtonText = () => {
    if(this.state.gameCompleted) return 'DONE';
    if(this.state.gamePaused) return 'NEXT';
    if(this.state.timerCounting) return this.state.currentCount;
    return 'START';
  }

  render() {
    // Animations
    const scenarioBoxAnimate = 'animate move-up';
    const scenarioBoxAnimateDown = 'animate move-down';
    const shouldAnimateInnerBox = 'animate scroll-open';
    const shouldAnimateQuestionText = 'animate scroll-open-text';

    // Alarm state
   // this.gameOver(this.state.gameCompleted);
    return (
      <div className="content">
        <Header title={(this.state.data) ? this.state.data.name : ""} />

        {/* BODY */}
        {this.state.data !== null && <div className="content-body" onClick={this.handleBody}>
          <div className="scenario-container">
            <div className={`scenario-box-tag-container ${scenarioBoxAnimate} ${scenarioBoxAnimateDown}`}>
              <div className="scenario-tag">SCENARIO</div>
              <div className="scenario-box">
                <div className="scenario-border"></div>
                <div className="scenario-text">{this.state.data.context}</div>
              </div>
            </div>
          </div>
          {!this.state.gameStarted && <div className="begin-div-container">
           <div className="button begin" onClick={() => this.handleBegin()}>BEGIN</div>
          </div>}
          {this.state.gameStarted &&
            <div className="container">
              <QuestionContainer
                shouldAnimateInnerBox={shouldAnimateInnerBox}
                shouldAnimateQuestionText={shouldAnimateQuestionText}
                currentQuestionText={this.state.currentQuestion.text}
                currentQuestionNumber={this.state.currentQuestion.number}
                buttonText={this.state.buttonText}
                isAdmin={this.state.isAdmin}
                handleRestart={() => this.handleRestart()}
              />
              {this.state.isAdmin ?
              <AdminUserButtons
                  firstButtonText={this.getAdminButtonText()}
                  secondButtonText="RESTART"
                  isCounting={this.state.timerCounting}
                  currentCount={this.state.currentCount}
                  handleStart={() => this.handleStart()}
                  handleRestart={() =>this.handleRestart()}
              /> : 
              <RegularUserButton
                currentCount={this.state.currentCount}
              />}
            </div>
          }
        </div>}
        <Footer />
      </div>

    );
  }
};

GamePage.propTypes = {};

export default GamePage;
